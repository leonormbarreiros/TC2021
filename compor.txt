; PRIMEIRO PASSO: uniformizar K para todas as máquinas
; isso é feito calculando o maior K para todas as máquinas, e depois as que têm menor utilizam-no

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; PRIMEIRA MÁQUINA

qin Q__ Q__ R** q01

;para cada digito do estado, acrescenta 1 ao valor de K
q01 1__ 11_ RR* q01
q01 2__ 21_ RR* q01
q01 3__ 31_ RR* q01
q01 4__ 41_ RR* q01
q01 5__ 51_ RR* q01
q01 6__ 61_ RR* q01
q01 7__ 71_ RR* q01
q01 8__ 81_ RR* q01
q01 9__ 91_ RR* q01
q01 0__ 01_ RR* q01

;lendo A, terminou de ler o estado (já tem K da 1.ª máquina)
q01 A__ A__ R** qskip1

;vai até à máquina seguinte para ver se os K, T são maiores ou menores
qskip1 Q__ Q__ R** qskip1
qskip1 A__ A__ R** qskip1
qskip1 Y__ Y__ R** qskip1
qskip1 N__ N__ R** qskip1
qskip1 S__ S__ R** qskip1
qskip1 L__ L__ R** qskip1
qskip1 R__ R__ R** qskip1
qskip1 1__ 1__ R** qskip1
qskip1 2__ 2__ R** qskip1
qskip1 3__ 3__ R** qskip1
qskip1 4__ 4__ R** qskip1
qskip1 5__ 5__ R** qskip1
qskip1 6__ 6__ R** qskip1
qskip1 7__ 7__ R** qskip1
qskip1 8__ 8__ R** qskip1
qskip1 9__ 9__ R** qskip1
qskip1 0__ 0__ R** qskip1
qskip1 ;__ ;__ R** qskip1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; SEGUNDA MÁQUINA

;chegou à 2.ª máquina 
qskip1 $__ $__ R** q03
q03 Q__ Q__ RL* q04
q03 Y__ Y__ RL* q04
q03 N__ N__ RL* q04

;ver K da 2.ª máquina 
q04 11_ 11_ RL* q04
q04 21_ 21_ RL* q04
q04 31_ 31_ RL* q04
q04 41_ 41_ RL* q04
q04 51_ 51_ RL* q04
q04 61_ 61_ RL* q04
q04 71_ 71_ RL* q04
q04 81_ 81_ RL* q04
q04 91_ 91_ RL* q04
q04 01_ 01_ RL* q04

q04 1__ 11_ RL* q04
q04 2__ 21_ RL* q04
q04 3__ 31_ RL* q04
q04 4__ 41_ RL* q04
q04 5__ 51_ RL* q04
q04 6__ 61_ RL* q04
q04 7__ 71_ RL* q04
q04 8__ 81_ RL* q04
q04 9__ 91_ RL* q04
q04 0__ 01_ RL* q04

;lendo A, terminou de ler o estado (já tem K da máquina)
q04 A1_ A1_ *L* q04
q04 A__ A__ L** qat

; VOLTAR AO INÍCIO

;fim do cálculo - não há mais máquinas

qat ___ ___ R** first_machine
qat *__ *__ L** qat


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; SEGUNDO PASSO: calcular a máquina resultante de fazer a função composta
; isso é feito tendo em conta três aspetos:
;	1) na máquina M1, substitui o estado de aceitação (YY...) pelo estado inicial de M2 (Q10...)
;	3) teremos de modificar ligeiramente as máquinas enquanto as copiamos, devido ao trabalho que tivemos antes a calcular K

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

first_machine $__ $_; R*R second_machine
first_machine Q__ Q_Q **R copy_state_00
first_machine A__ A_A R*R first_machine
first_machine S__ S_S R*R first_machine
first_machine L__ L_L R*R first_machine
first_machine R__ R_R R*R first_machine
first_machine ;__ ;_; R*R first_machine


; questão anteriormente mencionada do estado de aceitação/rejeição de C
first_machine N__ N_N **R copy_no_00
first_machine Y__ Y_Q **R copy_yes_00


first_machine 1__ 1_1 R*R first_machine
first_machine 2__ 2_2 R*R first_machine
first_machine 3__ 3_3 R*R first_machine
first_machine 4__ 4_4 R*R first_machine
first_machine 5__ 5_5 R*R first_machine
first_machine 6__ 6_6 R*R first_machine
first_machine 7__ 7_7 R*R first_machine
first_machine 8__ 8_8 R*R first_machine
first_machine 9__ 9_9 R*R first_machine
first_machine 0__ 0_0 R*R first_machine

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; CASO ESPECIAL: estados de aceitação (estados iniciais de M2)
;                           rejeição (não pomos 0's para preencher, pomos N)
copy_yes_00 Y__ Y_1 RRR copy_yes_00
copy_yes_00 Y1_ Y10 RRR copy_yes_00
copy_yes_00 A1_ A10 *RR copy_yes_00
copy_yes_00 A__ A__ *L* copy_state_aux_00

copy_no_00 N__ N_N RRR copy_no_00
copy_no_00 N1_ N1N RRR copy_no_00
copy_no_00 A1_ A1N *RR copy_no_00
copy_no_00 A__ A__ *L* copy_state_aux_00

; copiar estado, ajustando para o valor de K

; esta é a máquina 0 --> colocamos Q0(...) e o resto do estado

copy_state_00 Q__ Q_0 RRR copy_state_00 

copy_state_00 01_ 010 RRR copy_state_00
copy_state_00 11_ 111 RRR copy_state_00
copy_state_00 21_ 212 RRR copy_state_00
copy_state_00 31_ 313 RRR copy_state_00
copy_state_00 41_ 414 RRR copy_state_00
copy_state_00 51_ 515 RRR copy_state_00
copy_state_00 61_ 616 RRR copy_state_00
copy_state_00 71_ 717 RRR copy_state_00
copy_state_00 81_ 818 RRR copy_state_00
copy_state_00 91_ 919 RRR copy_state_00
copy_state_00 A1_ A10 *RR copy_state_00

copy_state_00 A__ A__ *L* copy_state_aux_00
copy_state_aux_00 A1_ A1_ *L* copy_state_aux_00
copy_state_aux_00 A__ A__ *** first_machine
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; todos os raciocínios são iguais para M! no que diz respeito ao copiar estados e símbolos

second_machine Q__ Q_Q **R copy_state_01
second_machine A__ A_A R*R second_machine
second_machine S__ S_S R*R second_machine
second_machine L__ L_L R*R second_machine
second_machine R__ R_R R*R second_machine
second_machine ;__ ;_; R*R second_machine
second_machine ___ ___ **L rewind

second_machine 1__ 1_1 R*R second_machine
second_machine 2__ 2_2 R*R second_machine
second_machine 3__ 3_3 R*R second_machine
second_machine 4__ 4_4 R*R second_machine
second_machine 5__ 5_5 R*R second_machine
second_machine 6__ 6_6 R*R second_machine
second_machine 7__ 7_7 R*R second_machine
second_machine 8__ 8_8 R*R second_machine
second_machine 9__ 9_9 R*R second_machine
second_machine 0__ 0_0 R*R second_machine

second_machine N__ N_N **R copy_no_01
second_machine Y__ Y_Y **R copy_yes_01

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; CASO ESPECIAL: estados de aceitação e rejeição (não pomos 0's para preencher, pomos Y/N)
copy_no_01 N__ N_N RRR copy_no_01
copy_no_01 N1_ N1N RRR copy_no_01
copy_no_01 A1_ A1N *RR copy_no_01
copy_no_01 A__ A__ *L* copy_state_aux_01

copy_yes_01 Y__ Y_Y RRR copy_yes_01
copy_yes_01 Y1_ Y1Y RRR copy_yes_01
copy_yes_01 A1_ A1Y *RR copy_yes_01
copy_yes_01 A__ A__ *L* copy_state_aux_01

; copiar estado, ajustando para o valor de K

; esta é a máquina 1 --> colocamos Q1(...) e o resto do estado
copy_state_01 Q__ Q_1 RRR copy_state_01

copy_state_01 01_ 010 RRR copy_state_01
copy_state_01 11_ 111 RRR copy_state_01
copy_state_01 21_ 212 RRR copy_state_01
copy_state_01 31_ 313 RRR copy_state_01
copy_state_01 41_ 414 RRR copy_state_01
copy_state_01 51_ 515 RRR copy_state_01
copy_state_01 61_ 616 RRR copy_state_01
copy_state_01 71_ 717 RRR copy_state_01
copy_state_01 81_ 818 RRR copy_state_01
copy_state_01 91_ 919 RRR copy_state_01
copy_state_01 A1_ A10 *RR copy_state_01

copy_state_01 A__ A__ *L* copy_state_aux_01
copy_state_aux_01 A1_ A1_ *L* copy_state_aux_01
copy_state_aux_01 A__ A__ *** second_machine

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ÚLTIMO PASSO: por convenção, vamos colocar o cursor no início da máquina calculada

rewind **_ **_ **R halt-accept
rewind *** *** **L rewind
